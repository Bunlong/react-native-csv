{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/bunlong/workspace/os/react-papaparse/docs/src/components/screens/indexes/TypeConversion.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\n\nvar TypeConversion = function TypeConversion() {\n  return __jsx(\"section\", {\n    id: \"type-conversion\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"grid-container narrow-grid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"grid-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }\n  }, \"Type Conversion\"), __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }\n  }, \"\\\"Hey, these numbers are parsed as strings.\\\"\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }\n  }, __jsx(\"i\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 14\n    }\n  }, \"Everything\"), \" is parsed as strings. If you want numbers and booleans, you can enable dynamic typing to do the conversion for you.\"), __jsx(\"pre\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }\n  }, __jsx(\"code\", {\n    className: \"language-javascript\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, \"// Converts numeric/boolean data\\nconst results = readString(csvString {\\n  dynamicTyping: true\\n})\")))));\n};\n\n_c = TypeConversion;\nexport default TypeConversion;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypeConversion\");","map":{"version":3,"sources":["/home/bunlong/workspace/os/react-papaparse/docs/src/components/screens/indexes/TypeConversion.js"],"names":["React","TypeConversion"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,SACE;AAAS,IAAA,EAAE,EAAC,iBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,yHAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2GADF,CAJF,CADF,CADF,CADF;AAmBD,CApBD;;KAAMA,c;AAsBN,eAAeA,cAAf","sourcesContent":["import React from 'react'\n\nconst TypeConversion = () => {\n  return (\n    <section id='type-conversion'>\n      <div className='grid-container narrow-grid'>\n        <div className='grid-100'>\n          <h4>Type Conversion</h4>\n          <h5>\"Hey, these numbers are parsed as strings.\"</h5>\n          <p><i>Everything</i> is parsed as strings. If you want numbers and booleans, you can enable dynamic typing to do the conversion for you.</p>\n          <pre>\n            <code className='language-javascript'>\n              {`// Converts numeric/boolean data\nconst results = readString(csvString {\n  dynamicTyping: true\n})`}\n            </code>\n          </pre>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default TypeConversion\n"]},"metadata":{},"sourceType":"module"}