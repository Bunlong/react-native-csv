{"ast":null,"code":"var _jsxFileName = \"/home/bunlong/workspace/os/react-papaparse/docs/src/components/screens/indexes/Delimiter.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nconst Delimiter = () => {\n  return __jsx(\"section\", {\n    id: \"delimiter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"grid-container narrow-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"grid-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }\n  }, \"Delimiter Detection\"), __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }\n  }, \"\\\"But I don't know the delimiter...\\\"\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }\n  }, \"That's okay. react-papaparse will scan the first few rows to find the right delimiter.\"), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }\n  }, __jsx(\"code\", {\n    className: \"language-javascript\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, `import { readString } from 'react-papaparse'\n\nconst results = readString(csvString)\n\nconsole.log(results.meta.delimiter)\n\n`, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }, String.fromCharCode(47), String.fromCharCode(47), \" \\\"\", String.fromCharCode(92), \"t\\\"\"))))));\n};\n\nexport default Delimiter;","map":{"version":3,"sources":["/home/bunlong/workspace/os/react-papaparse/docs/src/components/screens/indexes/Delimiter.js"],"names":["React","Delimiter","String","fromCharCode"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,SACE;AAAS,IAAA,EAAE,EAAC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8FAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;;;;;;CADJ,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,MAAM,CAACC,YAAP,CAAoB,EAApB,CAAP,EAAgCD,MAAM,CAACC,YAAP,CAAoB,EAApB,CAAhC,SAA2DD,MAAM,CAACC,YAAP,CAAoB,EAApB,CAA3D,QARF,CADF,CAJF,CADF,CADF,CADF;AAuBD,CAxBD;;AA0BA,eAAeF,SAAf","sourcesContent":["import React from 'react'\n\nconst Delimiter = () => {\n  return (\n    <section id='delimiter'>\n      <div className='grid-container narrow-grid'>\n        <div className='grid-100'>\n          <h4>Delimiter Detection</h4>\n          <h5>\"But I don't know the delimiter...\"</h5>\n          <p>That's okay. react-papaparse will scan the first few rows to find the right delimiter.</p>\n          <pre>\n            <code className='language-javascript'>\n              {`import { readString } from 'react-papaparse'\n\nconst results = readString(csvString)\n\nconsole.log(results.meta.delimiter)\n\n`}\n              <span>{String.fromCharCode(47)}{String.fromCharCode(47)} \"{String.fromCharCode(92)}t\"</span>\n            </code>\n          </pre>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Delimiter\n"]},"metadata":{},"sourceType":"module"}