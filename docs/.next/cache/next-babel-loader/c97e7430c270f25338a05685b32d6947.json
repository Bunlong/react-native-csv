{"ast":null,"code":"var _jsxFileName = \"/home/bunlong/workspace/os/react-papaparse/docs/src/components/screens/indexes/CSVParsing.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nconst CSVParsing = () => {\n  return __jsx(\"section\", {\n    id: \"parse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"grid-container narrow-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"grid-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }\n  }, \"CSV Parsing\"), __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }\n  }, \"\\\"Isn't parsing CSV just \", __jsx(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 37\n    }\n  }, \"String.split(',')\"), \"?\\\"\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }, \"react-papaparse does it right. Just pass in the CSV string with an optional \", __jsx(\"a\", {\n    href: \"/docs#config\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 22\n    }\n  }, \"configuration\"), \".\"), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, __jsx(\"code\", {\n    className: \"language-javascript\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, `import { readString } from 'react-papaparse'\n\nconst results = readString(csvString, config)\n\n/*\nresults = {\n  data: [ ... ],    // parsed data\n  errors: [ ... ],  // errors encountered\n  meta: { ... }     // extra parse info\n}\n*/`)))));\n};\n\nexport default CSVParsing;","map":{"version":3,"sources":["/home/bunlong/workspace/os/react-papaparse/docs/src/components/screens/indexes/CSVParsing.js"],"names":["React","CSVParsing"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,SACE;AAAS,IAAA,EAAE,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAC0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAD1B,QAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFAEW;AAAG,IAAA,IAAI,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFX,MALF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAXY,CADF,CATF,CADF,CADF,CADF;AA+BD,CAhCD;;AAkCA,eAAeA,UAAf","sourcesContent":["import React from 'react';\n\nconst CSVParsing = () => {\n  return (\n    <section id=\"parse\">\n      <div className=\"grid-container narrow-grid\">\n        <div className=\"grid-100\">\n          <h4>CSV Parsing</h4>\n          <h5>\n            \"Isn't parsing CSV just <code>String.split(',')</code>?\"\n          </h5>\n          <p>\n            react-papaparse does it right. Just pass in the CSV string with an\n            optional <a href=\"/docs#config\">configuration</a>.\n          </p>\n          <pre>\n            <code className=\"language-javascript\">\n              {`import { readString } from 'react-papaparse'\n\nconst results = readString(csvString, config)\n\n/*\nresults = {\n  data: [ ... ],    // parsed data\n  errors: [ ... ],  // errors encountered\n  meta: { ... }     // extra parse info\n}\n*/`}\n            </code>\n          </pre>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default CSVParsing;\n"]},"metadata":{},"sourceType":"module"}