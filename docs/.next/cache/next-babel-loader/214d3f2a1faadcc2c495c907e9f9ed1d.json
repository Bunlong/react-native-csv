{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/bunlong/workspace/os/react-papaparse/docs/src/components/screens/docs/CSVToJSON.js\";\n\nvar __jsx = React.createElement;\n\n/* eslint-disable react/jsx-no-target-blank */\nimport React from 'react';\n\nvar CSVToJSON = function CSVToJSON() {\n  return __jsx(\"section\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"grid-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"grid-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, __jsx(\"h4\", {\n    id: \"csv-to-json\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }\n  }, \"Convert CSV to JSON\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }\n  }, \"Delimited data can be parsed out of strings or files. Files that are parsed can be local. Local files are used with CSVReader component.\")), __jsx(\"div\", {\n    className: \"grid-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, __jsx(\"h5\", {\n    id: \"strings\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, \"Parse string\")), __jsx(\"div\", {\n    className: \"grid-50\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(\"pre\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, __jsx(\"code\", {\n    className: \"language-javascript\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }\n  }, \"readString(csvString\", __jsx(\"i\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 74\n    }\n  }, \"[, \", __jsx(\"a\", {\n    href: \"#config\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 80\n    }\n  }, \"config\"), \"]\"), \")\"))), __jsx(\"div\", {\n    className: \"grid-50\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, \"csvString\"), \" is a string of delimited text to be parsed.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"config\"), \" is an optional \", __jsx(\"a\", {\n    href: \"#config\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 52\n    }\n  }, \"config object\"), \".\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"Returns a \", __jsx(\"a\", {\n    href: \"#results\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 27\n    }\n  }, \"parse results\"), \" object (if not streaming or using worker).\"))), __jsx(\"div\", {\n    className: \"clear\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"grid-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(\"h5\", {\n    id: \"local-files\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"Parse local files\")), __jsx(\"div\", {\n    className: \"grid-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    id: \"basic-upload\",\n    style: {\n      fontSize: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Basic Upload\")), __jsx(\"div\", {\n    className: \"grid-50\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(\"pre\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, __jsx(\"code\", {\n    className: \"language-javascript\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"<CSVReader\\n  ref={buttonRef}\\n  onFileLoad={this.handleOnDrop}\\n  onError={this.handleOnError}\\n  noClick\\n  noDrag\\n  config={{}}\\n  style={{}}\\n  onRemoveFile={this.handleOnRemoveFile}\\n  >\\n  {({ file }) => (\\n    <aside>\\n      <button\\n        type='button'\\n        onClick={this.handleOpenDialog}\\n      >\\n          Browe file\\n      </button>\\n      <div>\\n        {file && file.name}\\n      </div>\\n      <button onClick={this.handleRemoveFile}>Remove</button>\\n    </aside>\\n  )}\\n</CSVReader>\\n\")), __jsx(\"span\", {\n    style: {\n      \"float\": 'right',\n      marginBottom: 14,\n      textAlignLast: 'end'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    href: \"https://github.com/Bunlong/react-papaparse/blob/master/demo/CSVReader1.js\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 84\n    }\n  }, \"Source code\"))), __jsx(\"div\", {\n    className: \"grid-50\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    href: \"https://reactjs.org/docs/refs-and-the-dom.html\",\n    target: \"_blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 23\n    }\n  }, \"ref\")), \" is a way to access/get files from \", __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 145\n    }\n  }, '<input type=\"file\">'), \" element.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"onFileLoad\"), \" is the function to be called passing loaded results.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"onError\"), \" is error handling function.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"noClick\"), \" If true, disables click to open the native file selection dialog.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"noDrag\"), \" If true, disables drag 'n' drop.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"noProgressBar\"), \" If true, disables progress bar.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"progressBarColor\"), \" is a property to be used to set the color of progress bar (for example, \", __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 119\n    }\n  }, \"progressBarColor='#659cef'\"), \").\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"style\"), \" is some styles to be applied to the \", __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 72\n    }\n  }, '<input>'), \" element.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"config\"), \" is a \", __jsx(\"a\", {\n    href: \"#config\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 42\n    }\n  }, \"config object\"), \" which contains a callback.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Doesn't return anything. Results are provided asynchronously to a callback function.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    href: \"https://github.com/Bunlong/react-papaparse/wiki/CSVReader-(Drag-to-Upload)-Style\",\n    target: \"_blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"How to customize CSVReader (Drag to upload) style?\")))), __jsx(\"div\", {\n    className: \"clear\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"grid-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    id: \"click-and-drag-upload\",\n    style: {\n      fontSize: 20,\n      marginTop: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Click and Drag Upload\")), __jsx(\"div\", {\n    className: \"grid-50\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, __jsx(\"pre\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, __jsx(\"code\", {\n    className: \"language-javascript\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"<CSVReader\\n  onDrop={this.handleOnDrop}\\n  onError={this.handleOnError}\\n  style={{}}\\n  config={{}}\\n  addRemoveButton\\n  onRemoveFile={this.handleOnRemoveFile}\\n>\\n  <span>Drop CSV file here or click to upload.</span>\\n</CSVReader>\\n\")), __jsx(\"span\", {\n    style: {\n      \"float\": 'right',\n      marginBottom: 14,\n      textAlignLast: 'end'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    href: \"https://github.com/Bunlong/react-papaparse/blob/master/demo/CSVReader2.js\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 84\n    }\n  }, \"Source code\"))), __jsx(\"div\", {\n    className: \"grid-50\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"onDrop\"), \" is the function to be called passing loaded results.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, \"onError\"), \" is error handling function.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"noProgressBar\"), \" If true, disables progress bar.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"progressBarColor\"), \" is a property to be used to set the color of progress bar (for example, \", __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 119\n    }\n  }, \"progressBarColor='#659cef'\"), \").\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"style\"), \" is some styles to be applied to the \", __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 72\n    }\n  }, '<input>'), \" element.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, \"addRemoveButton\"), \" If true, this will add a button to remove or cancel (if already uploading) the file.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"removeButtonColor\"), \" is a property to be used to set the color of remove button (for example, \", __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 121\n    }\n  }, \"removeButtonColor='#659cef'\"), \").\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, \"config\"), \" is a \", __jsx(\"a\", {\n    href: \"#config\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 42\n    }\n  }, \"config object\"), \" which contains a callback.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Doesn't return anything. Results are provided asynchronously to a callback function.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    href: \"https://github.com/Bunlong/react-papaparse/wiki/CSVReader-(Drag-to-Upload)-Style\",\n    target: \"_blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, \"How to customize CSVReader (Drag to upload) style?\")))), __jsx(\"div\", {\n    className: \"clear\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"grid-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    id: \"drag-no-click-upload\",\n    style: {\n      fontSize: 20,\n      marginTop: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"Drag ( No Click ) Upload\")), __jsx(\"div\", {\n    className: \"grid-50\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, __jsx(\"pre\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, __jsx(\"code\", {\n    className: \"language-javascript\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"<CSVReader\\n  onDrop={this.handleOnDrop}\\n  onError={this.handleOnError}\\n  noClick\\n  style={{}}\\n  config={{}}\\n  addRemoveButton\\n  onRemoveFile={this.handleOnRemoveFile}\\n>\\n  <span>Drop CSV file here to upload.</span>\\n</CSVReader>\\n\")), __jsx(\"span\", {\n    style: {\n      \"float\": 'right',\n      marginBottom: 14,\n      textAlignLast: 'end'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    href: \"https://github.com/Bunlong/react-papaparse/blob/master/demo/CSVReader3.js\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 84\n    }\n  }, \"Source code\"))), __jsx(\"div\", {\n    className: \"grid-50\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, \"onDrop\"), \" is the function to be called passing loaded results.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, \"onError\"), \" is error handling function.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, \"noClick\"), \" If true, disables click to open the native file selection dialog.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, \"noProgressBar\"), \" If true, disables progress bar.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, \"progressBarColor\"), \" is a property to be used to set the color of progress bar (for example, \", __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 119\n    }\n  }, \"progressBarColor='#659cef'\"), \").\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, \"style\"), \" is some styles to be applied to the \", __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 72\n    }\n  }, '<input>'), \" element.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, \"addRemoveButton\"), \" If true, this will add a button to remove or cancel (if already uploading) the file.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, \"removeButtonColor\"), \" is a property to be used to set the color of remove button (for example, \", __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 121\n    }\n  }, \"removeButtonColor='#659cef'\"), \").\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, \"config\"), \" is a \", __jsx(\"a\", {\n    href: \"#config\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 42\n    }\n  }, \"config object\"), \" which contains a callback.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, \"Doesn't return anything. Results are provided asynchronously to a callback function.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    href: \"https://github.com/Bunlong/react-papaparse/wiki/CSVReader-(Drag-to-Upload)-Style\",\n    target: \"_blank\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, \"How to customize CSVReader (Drag to upload) style?\")))), __jsx(\"div\", {\n    className: \"clear\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"grid-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    id: \"click-no-drag-upload\",\n    style: {\n      fontSize: 20,\n      marginTop: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, \"Click ( No Drag ) Upload\")), __jsx(\"div\", {\n    className: \"grid-50\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, __jsx(\"pre\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, __jsx(\"code\", {\n    className: \"language-javascript\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, \"<CSVReader \\n  onDrop={this.handleOnDrop}\\n  onError={this.handleOnError}\\n  noDrag\\n  style={{}}\\n  config={{}}\\n  addRemoveButton\\n  onRemoveFile={this.handleOnRemoveFile}\\n>\\n  <span>Click to upload.</span>\\n</CSVReader>\\n\")), __jsx(\"span\", {\n    style: {\n      \"float\": 'right',\n      marginBottom: 14,\n      textAlignLast: 'end'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    href: \"https://github.com/Bunlong/react-papaparse/blob/master/demo/CSVReader4.js\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 84\n    }\n  }, \"Source code\"))), __jsx(\"div\", {\n    className: \"grid-50\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, \"onDrop\"), \" is the function to be called passing loaded results.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, \"onError\"), \" is error handling function.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, \"noDrag\"), \" If true, disables drag 'n' drop.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, \"noProgressBar\"), \" If true, disables progress bar.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, \"progressBarColor\"), \" is a property to be used to set the color of progress bar (for example, \", __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 119\n    }\n  }, \"progressBarColor='#659cef'\"), \").\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, \"style\"), \" is some styles to be applied to the \", __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 72\n    }\n  }, '<input>'), \" element.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, \"addRemoveButton\"), \" If true, this will add a button to remove or cancel (if already uploading) the file.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, \"removeButtonColor\"), \" is a property to be used to set the color of remove button (for example, \", __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 121\n    }\n  }, \"removeButtonColor='#659cef'\"), \").\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, \"config\"), \" is a \", __jsx(\"a\", {\n    href: \"#config\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 42\n    }\n  }, \"config object\"), \" which contains a callback.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, \"Doesn't return anything. Results are provided asynchronously to a callback function.\"))), __jsx(\"div\", {\n    className: \"clear\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"grid-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, __jsx(\"h5\", {\n    id: \"remote-files\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, \"Parse remote file\")), __jsx(\"div\", {\n    className: \"grid-50\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, __jsx(\"pre\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, __jsx(\"code\", {\n    className: \"language-javascript\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, \"readRemoteFile(url, {\\n  // rest of config ...\\n})\"))), __jsx(\"div\", {\n    className: \"grid-50\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }, \"url\"), \" is the path or URL to the file to download.\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, \"The second argument is a \", __jsx(\"a\", {\n    href: \"#config\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 42\n    }\n  }, \"config object\"), \".\"), __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, \"Doesn't return anything. Results are provided asynchronously to a callback function.\")))));\n};\n\n_c = CSVToJSON;\nexport default CSVToJSON;\n\nvar _c;\n\n$RefreshReg$(_c, \"CSVToJSON\");","map":{"version":3,"sources":["/home/bunlong/workspace/os/react-papaparse/docs/src/components/screens/docs/CSVToJSON.js"],"names":["React","CSVToJSON","fontSize","marginBottom","textAlignLast","marginTop"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-no-target-blank */\nimport React from 'react'\n\nconst CSVToJSON = () => {\n  return (\n    <section>\n      <div className='grid-container'>\n        <div className='grid-100'>\n          <h4 id='csv-to-json'>Convert CSV to JSON</h4>\n          <p>Delimited data can be parsed out of strings or files. Files that are parsed can be local. Local files are used with CSVReader component.</p>\n        </div>\n\n        <div className='grid-100'>\n          <h5 id='strings'>Parse string</h5>\n        </div>\n        <div className='grid-50'>\n          <pre><code className='language-javascript'>readString(csvString<i>[, <a href='#config'>config</a>]</i>)</code></pre>\n        </div>\n        <div className='grid-50'>\n          <ul>\n            <li><code>csvString</code> is a string of delimited text to be parsed.</li>\n            <li><code>config</code> is an optional <a href='#config'>config object</a>.</li>\n            <li>Returns a <a href='#results'>parse results</a> object (if not streaming or using worker).</li>\n          </ul>\n        </div>\n\n        <div className='clear' />\n\n        <div className='grid-100'>\n          <h5 id='local-files'>Parse local files</h5>\n        </div>\n        <div className='grid-100'>\n          <p id='basic-upload' style={{ fontSize: 20 }}>Basic Upload</p>\n        </div>\n        <div className='grid-50'>\n          <pre>\n            <code className='language-javascript'>\n              {`<CSVReader\n  ref={buttonRef}\n  onFileLoad={this.handleOnDrop}\n  onError={this.handleOnError}\n  noClick\n  noDrag\n  config={{}}\n  style={{}}\n  onRemoveFile={this.handleOnRemoveFile}\n  >\n  {({ file }) => (\n    <aside>\n      <button\n        type='button'\n        onClick={this.handleOpenDialog}\n      >\n          Browe file\n      </button>\n      <div>\n        {file && file.name}\n      </div>\n      <button onClick={this.handleRemoveFile}>Remove</button>\n    </aside>\n  )}\n</CSVReader>\n`}\n            </code>\n          </pre>\n          <span style={{ float: 'right', marginBottom: 14, textAlignLast: 'end' }}><a href='https://github.com/Bunlong/react-papaparse/blob/master/demo/CSVReader1.js'>Source code</a></span>\n        </div>\n        <div className='grid-50'>\n          <ul>\n            <li><code><a href='https://reactjs.org/docs/refs-and-the-dom.html' target='_blank'>ref</a></code> is a way to access/get files from <code>{'<input type=\"file\">'}</code> element.</li>\n            <li><code>onFileLoad</code> is the function to be called passing loaded results.</li>\n            <li><code>onError</code> is error handling function.</li>\n            <li><code>noClick</code> If true, disables click to open the native file selection dialog.</li>\n            <li><code>noDrag</code> If true, disables drag 'n' drop.</li>\n            <li><code>noProgressBar</code> If true, disables progress bar.</li>\n            <li><code>progressBarColor</code> is a property to be used to set the color of progress bar (for example, <code>progressBarColor='#659cef'</code>).</li>\n            <li><code>style</code> is some styles to be applied to the <code>{'<input>'}</code> element.</li>\n            <li><code>config</code> is a <a href='#config'>config object</a> which contains a callback.</li>\n            <li>Doesn't return anything. Results are provided asynchronously to a callback function.</li>\n            <li><a href=\"https://github.com/Bunlong/react-papaparse/wiki/CSVReader-(Drag-to-Upload)-Style\" target=\"_blank\">How to customize CSVReader (Drag to upload) style?</a></li>\n          </ul>\n        </div>\n\n        <div className='clear' />\n\n        <div className='grid-100'>\n          <p id='click-and-drag-upload' style={{ fontSize: 20, marginTop: 50 }}>Click and Drag Upload</p>\n        </div>\n        <div className='grid-50'>\n          <pre>\n            <code className='language-javascript'>\n              {`<CSVReader\n  onDrop={this.handleOnDrop}\n  onError={this.handleOnError}\n  style={{}}\n  config={{}}\n  addRemoveButton\n  onRemoveFile={this.handleOnRemoveFile}\n>\n  <span>Drop CSV file here or click to upload.</span>\n</CSVReader>\n`}\n            </code>\n          </pre>\n          <span style={{ float: 'right', marginBottom: 14, textAlignLast: 'end' }}><a href='https://github.com/Bunlong/react-papaparse/blob/master/demo/CSVReader2.js'>Source code</a></span>\n        </div>\n        <div className='grid-50'>\n          <ul>\n            <li><code>onDrop</code> is the function to be called passing loaded results.</li>\n            <li><code>onError</code> is error handling function.</li>\n            <li><code>noProgressBar</code> If true, disables progress bar.</li>\n            <li><code>progressBarColor</code> is a property to be used to set the color of progress bar (for example, <code>progressBarColor='#659cef'</code>).</li>\n            <li><code>style</code> is some styles to be applied to the <code>{'<input>'}</code> element.</li>\n            <li><code>addRemoveButton</code> If true, this will add a button to remove or cancel (if already uploading) the file.</li>\n            <li><code>removeButtonColor</code> is a property to be used to set the color of remove button (for example, <code>removeButtonColor='#659cef'</code>).</li>\n            <li><code>config</code> is a <a href='#config'>config object</a> which contains a callback.</li>\n            <li>Doesn't return anything. Results are provided asynchronously to a callback function.</li>\n            <li><a href=\"https://github.com/Bunlong/react-papaparse/wiki/CSVReader-(Drag-to-Upload)-Style\" target=\"_blank\">How to customize CSVReader (Drag to upload) style?</a></li>\n          </ul>\n        </div>\n\n        <div className='clear' />\n\n        <div className='grid-100'>\n          <p id='drag-no-click-upload' style={{ fontSize: 20, marginTop: 50 }}>Drag ( No Click ) Upload</p>\n        </div>\n        <div className='grid-50'>\n          <pre>\n            <code className='language-javascript'>\n              {`<CSVReader\n  onDrop={this.handleOnDrop}\n  onError={this.handleOnError}\n  noClick\n  style={{}}\n  config={{}}\n  addRemoveButton\n  onRemoveFile={this.handleOnRemoveFile}\n>\n  <span>Drop CSV file here to upload.</span>\n</CSVReader>\n`}\n            </code>\n          </pre>\n          <span style={{ float: 'right', marginBottom: 14, textAlignLast: 'end' }}><a href='https://github.com/Bunlong/react-papaparse/blob/master/demo/CSVReader3.js'>Source code</a></span>\n        </div>\n        <div className='grid-50'>\n          <ul>\n            <li><code>onDrop</code> is the function to be called passing loaded results.</li>\n            <li><code>onError</code> is error handling function.</li>\n            <li><code>noClick</code> If true, disables click to open the native file selection dialog.</li>\n            <li><code>noProgressBar</code> If true, disables progress bar.</li>\n            <li><code>progressBarColor</code> is a property to be used to set the color of progress bar (for example, <code>progressBarColor='#659cef'</code>).</li>\n            <li><code>style</code> is some styles to be applied to the <code>{'<input>'}</code> element.</li>\n            <li><code>addRemoveButton</code> If true, this will add a button to remove or cancel (if already uploading) the file.</li>\n            <li><code>removeButtonColor</code> is a property to be used to set the color of remove button (for example, <code>removeButtonColor='#659cef'</code>).</li>\n            <li><code>config</code> is a <a href='#config'>config object</a> which contains a callback.</li>\n            <li>Doesn't return anything. Results are provided asynchronously to a callback function.</li>\n            <li><a href=\"https://github.com/Bunlong/react-papaparse/wiki/CSVReader-(Drag-to-Upload)-Style\" target=\"_blank\">How to customize CSVReader (Drag to upload) style?</a></li>\n          </ul>\n        </div>\n\n        <div className='clear' />\n\n        <div className='grid-100'>\n          <p id='click-no-drag-upload' style={{ fontSize: 20, marginTop: 50 }}>Click ( No Drag ) Upload</p>\n        </div>\n        <div className='grid-50'>\n          <pre>\n            <code className='language-javascript'>\n              {`<CSVReader \n  onDrop={this.handleOnDrop}\n  onError={this.handleOnError}\n  noDrag\n  style={{}}\n  config={{}}\n  addRemoveButton\n  onRemoveFile={this.handleOnRemoveFile}\n>\n  <span>Click to upload.</span>\n</CSVReader>\n`}\n            </code>\n          </pre>\n          <span style={{ float: 'right', marginBottom: 14, textAlignLast: 'end' }}><a href='https://github.com/Bunlong/react-papaparse/blob/master/demo/CSVReader4.js'>Source code</a></span>\n        </div>\n        <div className='grid-50'>\n          <ul>\n            <li><code>onDrop</code> is the function to be called passing loaded results.</li>\n            <li><code>onError</code> is error handling function.</li>\n            <li><code>noDrag</code> If true, disables drag 'n' drop.</li>\n            <li><code>noProgressBar</code> If true, disables progress bar.</li>\n            <li><code>progressBarColor</code> is a property to be used to set the color of progress bar (for example, <code>progressBarColor='#659cef'</code>).</li>\n            <li><code>style</code> is some styles to be applied to the <code>{'<input>'}</code> element.</li>\n            <li><code>addRemoveButton</code> If true, this will add a button to remove or cancel (if already uploading) the file.</li>\n            <li><code>removeButtonColor</code> is a property to be used to set the color of remove button (for example, <code>removeButtonColor='#659cef'</code>).</li>\n            <li><code>config</code> is a <a href='#config'>config object</a> which contains a callback.</li>\n            <li>Doesn't return anything. Results are provided asynchronously to a callback function.</li>\n          </ul>\n        </div>\n\n        <div className='clear' />\n\n        <div className='grid-100'>\n          <h5 id='remote-files'>Parse remote file</h5>\n        </div>\n        <div className='grid-50'>\n          <pre>\n            <code className='language-javascript'>\n              {`readRemoteFile(url, {\n  // rest of config ...\n})`}\n            </code>\n          </pre>\n        </div>\n        <div className='grid-50'>\n          <ul>\n            <li><code>url</code> is the path or URL to the file to download.</li>\n            <li>The second argument is a <a href='#config'>config object</a>.</li>\n            <li>Doesn't return anything. Results are provided asynchronously to a callback function.</li>\n          </ul>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default CSVToJSON\n"]},"metadata":{},"sourceType":"module"}