{"ast":null,"code":"var __jsx = React.createElement;\n\n/* eslint-disable react/jsx-no-target-blank */\nimport React from 'react';\n\nvar CSVToJSON = function CSVToJSON() {\n  return __jsx(\"section\", null, __jsx(\"div\", {\n    className: \"grid-container\"\n  }, __jsx(\"div\", {\n    className: \"grid-100\"\n  }, __jsx(\"h4\", {\n    id: \"csv-to-json\"\n  }, \"Convert CSV to JSON\"), __jsx(\"p\", null, \"Delimited data can be parsed out of strings or files. Files that are parsed can be local. Local files are used with CSVReader component.\")), __jsx(\"div\", {\n    className: \"grid-100\"\n  }, __jsx(\"h5\", {\n    id: \"strings\"\n  }, \"Parse string\")), __jsx(\"div\", {\n    className: \"grid-50\"\n  }, __jsx(\"pre\", null, __jsx(\"code\", {\n    className: \"language-javascript\"\n  }, \"readString(csvString\", __jsx(\"i\", null, \"[, \", __jsx(\"a\", {\n    href: \"#config\"\n  }, \"config\"), \"]\"), \")\"))), __jsx(\"div\", {\n    className: \"grid-50\"\n  }, __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(\"code\", null, \"csvString\"), \" is a string of delimited text to be parsed.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"config\"), \" is an optional\", ' ', __jsx(\"a\", {\n    href: \"#config\"\n  }, \"config object\"), \".\"), __jsx(\"li\", null, \"Returns a \", __jsx(\"a\", {\n    href: \"#results\"\n  }, \"parse results\"), \" object (if not streaming or using worker).\"))), __jsx(\"div\", {\n    className: \"clear\"\n  }), __jsx(\"div\", {\n    className: \"grid-100\"\n  }, __jsx(\"h5\", {\n    id: \"local-files\"\n  }, \"Parse local files\")), __jsx(\"div\", {\n    className: \"grid-100\"\n  }, __jsx(\"p\", {\n    id: \"basic-upload\",\n    style: {\n      fontSize: 20\n    }\n  }, \"Basic Upload\")), __jsx(\"div\", {\n    className: \"grid-50\"\n  }, __jsx(\"pre\", null, __jsx(\"code\", {\n    className: \"language-javascript\"\n  }, \"<CSVReader\\n  ref={buttonRef}\\n  onFileLoad={this.handleOnDrop}\\n  onError={this.handleOnError}\\n  noClick\\n  noDrag\\n  config={{}}\\n  style={{}}\\n  onRemoveFile={this.handleOnRemoveFile}\\n  >\\n  {({ file }) => (\\n    <aside>\\n      <button\\n        type='button'\\n        onClick={this.handleOpenDialog}\\n      >\\n          Browe file\\n      </button>\\n      <div>\\n        {file && file.name}\\n      </div>\\n      <button onClick={this.handleRemoveFile}>Remove</button>\\n    </aside>\\n  )}\\n</CSVReader>\\n\")), __jsx(\"span\", {\n    style: {\n      \"float\": 'right',\n      marginBottom: 14,\n      textAlignLast: 'end'\n    }\n  }, __jsx(\"a\", {\n    href: \"https://github.com/Bunlong/react-papaparse/blob/master/demo/CSVReader1.js\"\n  }, \"Source code\"))), __jsx(\"div\", {\n    className: \"grid-50\"\n  }, __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(\"code\", null, \"accept\"), \"is a property to be used to set MIME type for CSV. Default is\", ' ', __jsx(\"code\", null, \"'text/csv, .csv, application/vnd.ms-excel'\"), \".\"), __jsx(\"li\", null, __jsx(\"code\", null, __jsx(\"a\", {\n    href: \"https://reactjs.org/docs/refs-and-the-dom.html\",\n    target: \"_blank\"\n  }, \"ref\")), ' ', \"is a way to access/get files from\", ' ', __jsx(\"code\", null, '<input type=\"file\">'), \" element.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"onFileLoad\"), \" is the function to be called passing loaded results.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"onError\"), \" is error handling function.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"isReset\"), \" If true, reset CSVReader.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"noClick\"), \" If true, disables click to open the native file selection dialog.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"noDrag\"), \" If true, disables drag 'n' drop.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"noProgressBar\"), \" If true, disables progress bar.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"progressBarColor\"), \" is a property to be used to set the color of progress bar (for example,\", ' ', __jsx(\"code\", null, \"progressBarColor='#659cef'\"), \").\"), __jsx(\"li\", null, __jsx(\"code\", null, \"style\"), \" is some styles to be applied to the\", ' ', __jsx(\"code\", null, '<input>'), \" element.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"config\"), \" is a \", __jsx(\"a\", {\n    href: \"#config\"\n  }, \"config object\"), \" which contains a callback.\"), __jsx(\"li\", null, \"Doesn't return anything. Results are provided asynchronously to a callback function.\"))), __jsx(\"div\", {\n    className: \"clear\"\n  }), __jsx(\"div\", {\n    className: \"grid-100\"\n  }, __jsx(\"p\", {\n    id: \"click-and-drag-upload\",\n    style: {\n      fontSize: 20,\n      marginTop: 50\n    }\n  }, \"Click and Drag Upload\")), __jsx(\"div\", {\n    className: \"grid-50\"\n  }, __jsx(\"pre\", null, __jsx(\"code\", {\n    className: \"language-javascript\"\n  }, \"<CSVReader\\n  onDrop={this.handleOnDrop}\\n  onError={this.handleOnError}\\n  style={{}}\\n  config={{}}\\n  addRemoveButton\\n  onRemoveFile={this.handleOnRemoveFile}\\n>\\n  <span>Drop CSV file here or click to upload.</span>\\n</CSVReader>\\n\")), __jsx(\"span\", {\n    style: {\n      \"float\": 'right',\n      marginBottom: 14,\n      textAlignLast: 'end'\n    }\n  }, __jsx(\"a\", {\n    href: \"https://github.com/Bunlong/react-papaparse/blob/master/demo/CSVReader2.js\"\n  }, \"Source code\"))), __jsx(\"div\", {\n    className: \"grid-50\"\n  }, __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(\"code\", null, \"accept\"), \"is a property to be used to set MIME type for CSV. Default is\", ' ', __jsx(\"code\", null, \"'text/csv, .csv, application/vnd.ms-excel'\"), \".\"), __jsx(\"li\", null, __jsx(\"code\", null, \"onDrop\"), \" is the function to be called passing loaded results.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"onError\"), \" is error handling function.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"isReset\"), \" If true, reset CSVReader.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"noProgressBar\"), \" If true, disables progress bar.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"progressBarColor\"), \" is a property to be used to set the color of progress bar (for example,\", ' ', __jsx(\"code\", null, \"progressBarColor='#659cef'\"), \").\"), __jsx(\"li\", null, __jsx(\"code\", null, \"style\"), \" is some styles to be applied to the\", ' ', __jsx(\"code\", null, '<input>'), \" element.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"addRemoveButton\"), \" If true, this will add a button to remove or cancel (if already uploading) the file.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"removeButtonColor\"), \" is a property to be used to set the color of remove button (for example,\", ' ', __jsx(\"code\", null, \"removeButtonColor='#659cef'\"), \").\"), __jsx(\"li\", null, __jsx(\"code\", null, \"config\"), \" is a \", __jsx(\"a\", {\n    href: \"#config\"\n  }, \"config object\"), \" which contains a callback.\"), __jsx(\"li\", null, \"Doesn't return anything. Results are provided asynchronously to a callback function.\"), __jsx(\"li\", null, __jsx(\"a\", {\n    href: \"https://github.com/Bunlong/react-papaparse/wiki/CSVReader-(Drag-to-Upload)-Style\",\n    target: \"_blank\"\n  }, \"How to customize CSVReader (Drag to upload) style?\")))), __jsx(\"div\", {\n    className: \"clear\"\n  }), __jsx(\"div\", {\n    className: \"grid-100\"\n  }, __jsx(\"p\", {\n    id: \"drag-no-click-upload\",\n    style: {\n      fontSize: 20,\n      marginTop: 50\n    }\n  }, \"Drag ( No Click ) Upload\")), __jsx(\"div\", {\n    className: \"grid-50\"\n  }, __jsx(\"pre\", null, __jsx(\"code\", {\n    className: \"language-javascript\"\n  }, \"<CSVReader\\n  onDrop={this.handleOnDrop}\\n  onError={this.handleOnError}\\n  noClick\\n  style={{}}\\n  config={{}}\\n  addRemoveButton\\n  onRemoveFile={this.handleOnRemoveFile}\\n>\\n  <span>Drop CSV file here to upload.</span>\\n</CSVReader>\\n\")), __jsx(\"span\", {\n    style: {\n      \"float\": 'right',\n      marginBottom: 14,\n      textAlignLast: 'end'\n    }\n  }, __jsx(\"a\", {\n    href: \"https://github.com/Bunlong/react-papaparse/blob/master/demo/CSVReader3.js\"\n  }, \"Source code\"))), __jsx(\"div\", {\n    className: \"grid-50\"\n  }, __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(\"code\", null, \"accept\"), \"is a property to be used to set MIME type for CSV. Default is\", ' ', __jsx(\"code\", null, \"'text/csv, .csv, application/vnd.ms-excel'\"), \".\"), __jsx(\"li\", null, __jsx(\"code\", null, \"onDrop\"), \" is the function to be called passing loaded results.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"onError\"), \" is error handling function.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"isReset\"), \" If true, reset CSVReader.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"noClick\"), \" If true, disables click to open the native file selection dialog.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"noProgressBar\"), \" If true, disables progress bar.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"progressBarColor\"), \" is a property to be used to set the color of progress bar (for example,\", ' ', __jsx(\"code\", null, \"progressBarColor='#659cef'\"), \").\"), __jsx(\"li\", null, __jsx(\"code\", null, \"style\"), \" is some styles to be applied to the\", ' ', __jsx(\"code\", null, '<input>'), \" element.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"addRemoveButton\"), \" If true, this will add a button to remove or cancel (if already uploading) the file.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"removeButtonColor\"), \" is a property to be used to set the color of remove button (for example,\", ' ', __jsx(\"code\", null, \"removeButtonColor='#659cef'\"), \").\"), __jsx(\"li\", null, __jsx(\"code\", null, \"config\"), \" is a \", __jsx(\"a\", {\n    href: \"#config\"\n  }, \"config object\"), \" which contains a callback.\"), __jsx(\"li\", null, \"Doesn't return anything. Results are provided asynchronously to a callback function.\"), __jsx(\"li\", null, __jsx(\"a\", {\n    href: \"https://github.com/Bunlong/react-papaparse/wiki/CSVReader-(Drag-to-Upload)-Style\",\n    target: \"_blank\"\n  }, \"How to customize CSVReader (Drag to upload) style?\")))), __jsx(\"div\", {\n    className: \"clear\"\n  }), __jsx(\"div\", {\n    className: \"grid-100\"\n  }, __jsx(\"p\", {\n    id: \"click-no-drag-upload\",\n    style: {\n      fontSize: 20,\n      marginTop: 50\n    }\n  }, \"Click ( No Drag ) Upload\")), __jsx(\"div\", {\n    className: \"grid-50\"\n  }, __jsx(\"pre\", null, __jsx(\"code\", {\n    className: \"language-javascript\"\n  }, \"<CSVReader \\n  onDrop={this.handleOnDrop}\\n  onError={this.handleOnError}\\n  noDrag\\n  style={{}}\\n  config={{}}\\n  addRemoveButton\\n  onRemoveFile={this.handleOnRemoveFile}\\n>\\n  <span>Click to upload.</span>\\n</CSVReader>\\n\")), __jsx(\"span\", {\n    style: {\n      \"float\": 'right',\n      marginBottom: 14,\n      textAlignLast: 'end'\n    }\n  }, __jsx(\"a\", {\n    href: \"https://github.com/Bunlong/react-papaparse/blob/master/demo/CSVReader4.js\"\n  }, \"Source code\"))), __jsx(\"div\", {\n    className: \"grid-50\"\n  }, __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(\"code\", null, \"accept\"), \"is a property to be used to set MIME type for CSV. Default is\", ' ', __jsx(\"code\", null, \"'text/csv, .csv, application/vnd.ms-excel'\"), \".\"), __jsx(\"li\", null, __jsx(\"code\", null, \"onDrop\"), \" is the function to be called passing loaded results.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"onError\"), \" is error handling function.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"isReset\"), \" If true, reset CSVReader.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"noDrag\"), \" If true, disables drag 'n' drop.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"noProgressBar\"), \" If true, disables progress bar.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"progressBarColor\"), \" is a property to be used to set the color of progress bar (for example,\", ' ', __jsx(\"code\", null, \"progressBarColor='#659cef'\"), \").\"), __jsx(\"li\", null, __jsx(\"code\", null, \"style\"), \" is some styles to be applied to the\", ' ', __jsx(\"code\", null, '<input>'), \" element.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"addRemoveButton\"), \" If true, this will add a button to remove or cancel (if already uploading) the file.\"), __jsx(\"li\", null, __jsx(\"code\", null, \"removeButtonColor\"), \" is a property to be used to set the color of remove button (for example,\", ' ', __jsx(\"code\", null, \"removeButtonColor='#659cef'\"), \").\"), __jsx(\"li\", null, __jsx(\"code\", null, \"config\"), \" is a \", __jsx(\"a\", {\n    href: \"#config\"\n  }, \"config object\"), \" which contains a callback.\"), __jsx(\"li\", null, \"Doesn't return anything. Results are provided asynchronously to a callback function.\"), __jsx(\"li\", null, __jsx(\"a\", {\n    href: \"https://github.com/Bunlong/react-papaparse/wiki/CSVReader-(Drag-to-Upload)-Style\",\n    target: \"_blank\"\n  }, \"How to customize CSVReader (Drag to upload) style?\")))), __jsx(\"div\", {\n    className: \"clear\"\n  }), __jsx(\"div\", {\n    className: \"grid-100\"\n  }, __jsx(\"h5\", {\n    id: \"remote-files\"\n  }, \"Parse remote file\")), __jsx(\"div\", {\n    className: \"grid-50\"\n  }, __jsx(\"pre\", null, __jsx(\"code\", {\n    className: \"language-javascript\"\n  }, \"readRemoteFile(url, {\\n  // rest of config ...\\n})\"))), __jsx(\"div\", {\n    className: \"grid-50\"\n  }, __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(\"code\", null, \"url\"), \" is the path or URL to the file to download.\"), __jsx(\"li\", null, \"The second argument is a \", __jsx(\"a\", {\n    href: \"#config\"\n  }, \"config object\"), \".\"), __jsx(\"li\", null, \"Doesn't return anything. Results are provided asynchronously to a callback function.\")))));\n};\n\nexport default CSVToJSON;","map":null,"metadata":{},"sourceType":"module"}