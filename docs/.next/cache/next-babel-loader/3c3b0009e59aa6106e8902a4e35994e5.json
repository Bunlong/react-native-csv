{"ast":null,"code":"var _jsxFileName = \"/home/bunlong/workspace/os/react-papaparse/docs/src/components/screens/indexes/LocalFile.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nconst LocalFile = () => {\n  return __jsx(\"section\", {\n    id: \"local-files\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"grid-container narrow-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"grid-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 11\n    }\n  }, \"Local Files\"), __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }\n  }, \"\\\"Great, but I have a \", __jsx(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 34\n    }\n  }, \"file\"), \" to parse.\\\"\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }, \"Then use CSVReader component instead of readString method. Since file parsing is asynchronous, don't forget callback methods.\"), __jsx(\"div\", {\n    id: \"drag-no-click-upload\",\n    style: {\n      fontSize: 20,\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, \"Basic Upload\"), __jsx(\"div\", {\n    style: {\n      textAlign: 'center',\n      paddingTop: 50,\n      paddingBottom: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: \"/static/images/csvreader1.png\",\n    alt: \"Basic Upload\",\n    style: {\n      maxWidth: '100%',\n      height: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      marginBottom: 14\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    href: \"/docs#basic-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Properties\"), \"\\xA0 | \\xA0\", __jsx(\"a\", {\n    href: \"/demo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Demo\")), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, __jsx(\"code\", {\n    className: \"language-javascript\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, `import React, { Component } from 'react'\n\nimport { CSVReader } from 'react-papaparse'\n\nconst buttonRef = React.createRef()\n\nexport default class CSVReader extends Component {\n  handleOpenDialog = (e) => {\n    // Note that the ref is set async, so it might be null at some point \n    if (buttonRef.current) {\n      buttonRef.current.open(e)\n    }\n  }\n  \n  handleOnFileLoad = (data) => {\n    console.log('---------------------------')\n    console.log(data)\n    console.log('---------------------------')\n  }\n\n  handleOnError = (err, file, inputElem, reason) => {\n    console.log(err)\n  }\n\n  handleOnRemoveFile = (data) => {\n    console.log('---------------------------')\n    console.log(data)\n    console.log('---------------------------')\n  }\n\n  handleRemoveFile = (e) => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.removeFile(e)\n    }\n  }\n\n  render() {\n    return (\n      <CSVReader\n        ref={buttonRef}\n        onFileLoad={this.handleOnFileLoad}\n        onError={this.handleOnError}\n        noClick\n        noDrag\n        onRemoveFile={this.handleOnRemoveFile}\n      >\n        {({ file }) => (\n          <aside\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              marginBottom: 10\n            }}\n          >\n            <button\n              type='button'\n              onClick={this.handleOpenDialog}\n              style={{\n                borderRadius: 0,\n                marginLeft: 0,\n                marginRight: 0,\n                width: '40%',\n                paddingLeft: 0,\n                paddingRight: 0\n              }}\n            >\n              Browe file\n            </button>\n            <div\n              style={{\n                borderWidth: 1,\n                borderStyle: 'solid',\n                borderColor: '#ccc',\n                height: 45,\n                lineHeight: 2.5,\n                marginTop: 5,\n                marginBottom: 5,\n                paddingLeft: 13,\n                paddingTop: 3,\n                width: '60%'\n              }}\n            >\n              {file && file.name}\n            </div>\n            <button\n              style={{\n                borderRadius: 0,\n                marginLeft: 0,\n                marginRight: 0,\n                paddingLeft: 20,\n                paddingRight: 20\n              }}\n              onClick={this.handleRemoveFile}\n            >\n              Remove\n            </button>\n          </aside>\n        )}\n      </CSVReader>\n    )\n  }\n}`)), __jsx(\"div\", {\n    id: \"drag-no-click-upload\",\n    style: {\n      fontSize: 20,\n      marginTop: 35\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, \"Click and Drag Upload\"), __jsx(\"div\", {\n    style: {\n      textAlign: 'center',\n      paddingTop: 50,\n      paddingBottom: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: \"/static/images/csvreader2.png\",\n    alt: \"Click and Drag Upload\",\n    style: {\n      maxWidth: '100%',\n      height: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      marginBottom: 14\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    href: \"/docs#click-and-drag-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, \"Properties\"), \"\\xA0 | \\xA0\", __jsx(\"a\", {\n    href: \"/demo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, \"Demo\")), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, __jsx(\"code\", {\n    className: \"language-javascript\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, `import React, { Component } from 'react'\n\nimport { CSVReader } from 'react-papaparse'\n\nexport default class CSVReader extends Component {\n  handleOnDrop = (data) => {\n    console.log('---------------------------')\n    console.log(data)\n    console.log('---------------------------')\n  }\n\n  handleOnError = (err, file, inputElem, reason) => {\n    console.log(err)\n  }\n\n  handleOnRemoveFile = (data) => {\n    console.log('---------------------------')\n    console.log(data)\n    console.log('---------------------------')\n  }\n\n  render() {\n    return (\n      <CSVReader\n        onDrop={this.handleOnDrop}\n        onError={this.handleOnError}\n        addRemoveButton\n        onRemoveFile={this.handleOnRemoveFile}\n      >\n        <span>Drop CSV file here or click to upload.</span>\n      </CSVReader>\n    )\n  }\n}\n`)), __jsx(\"div\", {\n    id: \"drag-no-click-upload\",\n    style: {\n      fontSize: 20,\n      marginTop: 35\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, \"Drag ( No Click ) Upload\"), __jsx(\"div\", {\n    style: {\n      textAlign: 'center',\n      paddingTop: 50,\n      paddingBottom: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: \"/static/images/csvreader3.png\",\n    alt: \"Drag ( No Click ) Upload\",\n    style: {\n      maxWidth: '100%',\n      height: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      marginBottom: 14\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    href: \"/docs#drag-no-click-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }, \"Properties\"), \"\\xA0 | \\xA0\", __jsx(\"a\", {\n    href: \"/demo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, \"Demo\")), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }, __jsx(\"code\", {\n    className: \"language-javascript\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, `import React, { Component } from 'react'\n\nimport { CSVReader } from 'react-papaparse'\n\nexport default class CSVReader extends Component {\n  handleOnDrop = (data) => {\n    console.log('---------------------------')\n    console.log(data)\n    console.log('---------------------------')\n  }\n\n  handleOnError = (err, file, inputElem, reason) => {\n    console.log(err)\n  }\n\n  handleOnRemoveFile = (data) => {\n    console.log('---------------------------')\n    console.log(data)\n    console.log('---------------------------')\n  }\n\n  render() {\n    return (\n      <CSVReader\n        onDrop={this.handleOnDrop}\n        onError={this.handleOnError}\n        noClick\n        addRemoveButton\n        onRemoveFile={this.handleOnRemoveFile}\n      >\n        <span>Drop CSV file here to upload.</span>\n      </CSVReader>\n    )\n  }\n}`)), __jsx(\"div\", {\n    id: \"drag-no-click-upload\",\n    style: {\n      fontSize: 20,\n      marginTop: 35\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 11\n    }\n  }, \"Click ( No Drag ) Upload\"), __jsx(\"div\", {\n    style: {\n      textAlign: 'center',\n      paddingTop: 50,\n      paddingBottom: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: \"/static/images/csvreader4.png\",\n    alt: \"Click ( No Drag ) Upload\",\n    style: {\n      maxWidth: '100%',\n      height: 'auto '\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      marginBottom: 14\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    href: \"/docs#click-no-drag-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  }, \"Properties\"), \"\\xA0 | \\xA0\", __jsx(\"a\", {\n    href: \"/demo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }, \"Demo\")), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 11\n    }\n  }, __jsx(\"code\", {\n    className: \"language-javascript\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }, `import React, { Component } from 'react'\n\nimport { CSVReader } from 'react-papaparse'\n\nexport default class CSVReader extends Component {\n  handleOnDrop = (data) => {\n    console.log('---------------------------')\n    console.log(data)\n    console.log('---------------------------')\n  }\n\n  handleOnError = (err, file, inputElem, reason) => {\n    console.log(err)\n  }\n\n  handleOnRemoveFile = (data) => {\n    console.log('---------------------------')\n    console.log(data)\n    console.log('---------------------------')\n  }\n\n  render() {\n    return (\n      <CSVReader\n        onDrop={this.handleOnDrop}\n        onError={this.handleOnError}\n        noDrag\n        addRemoveButton\n        onRemoveFile={this.handleOnRemoveFile}\n      >\n        <span>Click to upload.</span>\n      </CSVReader>\n    )\n  }\n}`)))));\n};\n\nexport default LocalFile;","map":{"version":3,"sources":["/home/bunlong/workspace/os/react-papaparse/docs/src/components/screens/indexes/LocalFile.js"],"names":["React","LocalFile","fontSize","marginTop","textAlign","paddingTop","paddingBottom","maxWidth","height","display","justifyContent","marginBottom"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,SACE;AAAS,IAAA,EAAE,EAAC,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADvB,iBAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qIALF,EAUE;AACE,IAAA,EAAE,EAAC,sBADL;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,SAAS,EAAE;AAA3B,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,EAgBE;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,UAAU,EAAE,EAAnC;AAAuCC,MAAAA,aAAa,EAAE;AAAtD,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AACE,IAAA,GAAG,EAAC,+BADN;AAEE,IAAA,GAAG,EAAC,cAFN;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,MAAZ;AAAoBC,MAAAA,MAAM,EAAE;AAA5B,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAhBF,EAyBE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,cAAc,EAAE,UAFX;AAGLC,MAAAA,YAAY,EAAE;AAHT,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAG,IAAA,IAAI,EAAC,oBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,iBAQE;AAAG,IAAA,IAAI,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,CAzBF,EAmCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EADJ,CADF,CAnCF,EA+IE;AACE,IAAA,EAAE,EAAC,sBADL;AAEE,IAAA,KAAK,EAAE;AAAET,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,SAAS,EAAE;AAA3B,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BA/IF,EAqJE;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,UAAU,EAAE,EAAnC;AAAuCC,MAAAA,aAAa,EAAE;AAAtD,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AACE,IAAA,GAAG,EAAC,+BADN;AAEE,IAAA,GAAG,EAAC,uBAFN;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,MAAZ;AAAoBC,MAAAA,MAAM,EAAE;AAA5B,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CArJF,EA8JE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,cAAc,EAAE,UAFX;AAGLC,MAAAA,YAAY,EAAE;AAHT,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAG,IAAA,IAAI,EAAC,6BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,iBAQE;AAAG,IAAA,IAAI,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,CA9JF,EAwKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CADJ,CADF,CAxKF,EAgNE;AACE,IAAA,EAAE,EAAC,sBADL;AAEE,IAAA,KAAK,EAAE;AAAET,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,SAAS,EAAE;AAA3B,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAhNF,EAsNE;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,UAAU,EAAE,EAAnC;AAAuCC,MAAAA,aAAa,EAAE;AAAtD,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AACE,IAAA,GAAG,EAAC,+BADN;AAEE,IAAA,GAAG,EAAC,0BAFN;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,MAAZ;AAAoBC,MAAAA,MAAM,EAAE;AAA5B,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAtNF,EA+NE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,cAAc,EAAE,UAFX;AAGLC,MAAAA,YAAY,EAAE;AAHT,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAG,IAAA,IAAI,EAAC,4BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,iBAQE;AAAG,IAAA,IAAI,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,CA/NF,EAyOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EADJ,CADF,CAzOF,EAiRE;AACE,IAAA,EAAE,EAAC,sBADL;AAEE,IAAA,KAAK,EAAE;AAAET,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,SAAS,EAAE;AAA3B,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAjRF,EAuRE;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,UAAU,EAAE,EAAnC;AAAuCC,MAAAA,aAAa,EAAE;AAAtD,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AACE,IAAA,GAAG,EAAC,+BADN;AAEE,IAAA,GAAG,EAAC,0BAFN;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,MAAZ;AAAoBC,MAAAA,MAAM,EAAE;AAA5B,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAvRF,EAgSE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,cAAc,EAAE,UAFX;AAGLC,MAAAA,YAAY,EAAE;AAHT,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE;AAAG,IAAA,IAAI,EAAC,4BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,iBAQE;AAAG,IAAA,IAAI,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,CAhSF,EA0SE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EADJ,CADF,CA1SF,CADF,CADF,CADF;AAwVD,CAzVD;;AA2VA,eAAeV,SAAf","sourcesContent":["import React from 'react';\n\nconst LocalFile = () => {\n  return (\n    <section id=\"local-files\">\n      <div className=\"grid-container narrow-grid\">\n        <div className=\"grid-100\">\n          <h4>Local Files</h4>\n          <h5>\n            \"Great, but I have a <i>file</i> to parse.\"\n          </h5>\n          <p>\n            Then use CSVReader component instead of readString method. Since\n            file parsing is asynchronous, don't forget callback methods.\n          </p>\n\n          <div\n            id=\"drag-no-click-upload\"\n            style={{ fontSize: 20, marginTop: 10 }}\n          >\n            Basic Upload\n          </div>\n          <div\n            style={{ textAlign: 'center', paddingTop: 50, paddingBottom: 50 }}\n          >\n            <img\n              src=\"/static/images/csvreader1.png\"\n              alt=\"Basic Upload\"\n              style={{ maxWidth: '100%', height: 'auto' }}\n            />\n          </div>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'flex-end',\n              marginBottom: 14,\n            }}\n          >\n            <a href=\"/docs#basic-upload\">Properties</a>&nbsp; | &nbsp;\n            <a href=\"/demo\">Demo</a>\n          </div>\n          <pre>\n            <code className=\"language-javascript\">\n              {`import React, { Component } from 'react'\n\nimport { CSVReader } from 'react-papaparse'\n\nconst buttonRef = React.createRef()\n\nexport default class CSVReader extends Component {\n  handleOpenDialog = (e) => {\n    // Note that the ref is set async, so it might be null at some point \n    if (buttonRef.current) {\n      buttonRef.current.open(e)\n    }\n  }\n  \n  handleOnFileLoad = (data) => {\n    console.log('---------------------------')\n    console.log(data)\n    console.log('---------------------------')\n  }\n\n  handleOnError = (err, file, inputElem, reason) => {\n    console.log(err)\n  }\n\n  handleOnRemoveFile = (data) => {\n    console.log('---------------------------')\n    console.log(data)\n    console.log('---------------------------')\n  }\n\n  handleRemoveFile = (e) => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.removeFile(e)\n    }\n  }\n\n  render() {\n    return (\n      <CSVReader\n        ref={buttonRef}\n        onFileLoad={this.handleOnFileLoad}\n        onError={this.handleOnError}\n        noClick\n        noDrag\n        onRemoveFile={this.handleOnRemoveFile}\n      >\n        {({ file }) => (\n          <aside\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              marginBottom: 10\n            }}\n          >\n            <button\n              type='button'\n              onClick={this.handleOpenDialog}\n              style={{\n                borderRadius: 0,\n                marginLeft: 0,\n                marginRight: 0,\n                width: '40%',\n                paddingLeft: 0,\n                paddingRight: 0\n              }}\n            >\n              Browe file\n            </button>\n            <div\n              style={{\n                borderWidth: 1,\n                borderStyle: 'solid',\n                borderColor: '#ccc',\n                height: 45,\n                lineHeight: 2.5,\n                marginTop: 5,\n                marginBottom: 5,\n                paddingLeft: 13,\n                paddingTop: 3,\n                width: '60%'\n              }}\n            >\n              {file && file.name}\n            </div>\n            <button\n              style={{\n                borderRadius: 0,\n                marginLeft: 0,\n                marginRight: 0,\n                paddingLeft: 20,\n                paddingRight: 20\n              }}\n              onClick={this.handleRemoveFile}\n            >\n              Remove\n            </button>\n          </aside>\n        )}\n      </CSVReader>\n    )\n  }\n}`}\n            </code>\n          </pre>\n\n          <div\n            id=\"drag-no-click-upload\"\n            style={{ fontSize: 20, marginTop: 35 }}\n          >\n            Click and Drag Upload\n          </div>\n          <div\n            style={{ textAlign: 'center', paddingTop: 50, paddingBottom: 50 }}\n          >\n            <img\n              src=\"/static/images/csvreader2.png\"\n              alt=\"Click and Drag Upload\"\n              style={{ maxWidth: '100%', height: 'auto' }}\n            />\n          </div>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'flex-end',\n              marginBottom: 14,\n            }}\n          >\n            <a href=\"/docs#click-and-drag-upload\">Properties</a>&nbsp; | &nbsp;\n            <a href=\"/demo\">Demo</a>\n          </div>\n          <pre>\n            <code className=\"language-javascript\">\n              {`import React, { Component } from 'react'\n\nimport { CSVReader } from 'react-papaparse'\n\nexport default class CSVReader extends Component {\n  handleOnDrop = (data) => {\n    console.log('---------------------------')\n    console.log(data)\n    console.log('---------------------------')\n  }\n\n  handleOnError = (err, file, inputElem, reason) => {\n    console.log(err)\n  }\n\n  handleOnRemoveFile = (data) => {\n    console.log('---------------------------')\n    console.log(data)\n    console.log('---------------------------')\n  }\n\n  render() {\n    return (\n      <CSVReader\n        onDrop={this.handleOnDrop}\n        onError={this.handleOnError}\n        addRemoveButton\n        onRemoveFile={this.handleOnRemoveFile}\n      >\n        <span>Drop CSV file here or click to upload.</span>\n      </CSVReader>\n    )\n  }\n}\n`}\n            </code>\n          </pre>\n\n          <div\n            id=\"drag-no-click-upload\"\n            style={{ fontSize: 20, marginTop: 35 }}\n          >\n            Drag ( No Click ) Upload\n          </div>\n          <div\n            style={{ textAlign: 'center', paddingTop: 50, paddingBottom: 50 }}\n          >\n            <img\n              src=\"/static/images/csvreader3.png\"\n              alt=\"Drag ( No Click ) Upload\"\n              style={{ maxWidth: '100%', height: 'auto' }}\n            />\n          </div>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'flex-end',\n              marginBottom: 14,\n            }}\n          >\n            <a href=\"/docs#drag-no-click-upload\">Properties</a>&nbsp; | &nbsp;\n            <a href=\"/demo\">Demo</a>\n          </div>\n          <pre>\n            <code className=\"language-javascript\">\n              {`import React, { Component } from 'react'\n\nimport { CSVReader } from 'react-papaparse'\n\nexport default class CSVReader extends Component {\n  handleOnDrop = (data) => {\n    console.log('---------------------------')\n    console.log(data)\n    console.log('---------------------------')\n  }\n\n  handleOnError = (err, file, inputElem, reason) => {\n    console.log(err)\n  }\n\n  handleOnRemoveFile = (data) => {\n    console.log('---------------------------')\n    console.log(data)\n    console.log('---------------------------')\n  }\n\n  render() {\n    return (\n      <CSVReader\n        onDrop={this.handleOnDrop}\n        onError={this.handleOnError}\n        noClick\n        addRemoveButton\n        onRemoveFile={this.handleOnRemoveFile}\n      >\n        <span>Drop CSV file here to upload.</span>\n      </CSVReader>\n    )\n  }\n}`}\n            </code>\n          </pre>\n\n          <div\n            id=\"drag-no-click-upload\"\n            style={{ fontSize: 20, marginTop: 35 }}\n          >\n            Click ( No Drag ) Upload\n          </div>\n          <div\n            style={{ textAlign: 'center', paddingTop: 50, paddingBottom: 50 }}\n          >\n            <img\n              src=\"/static/images/csvreader4.png\"\n              alt=\"Click ( No Drag ) Upload\"\n              style={{ maxWidth: '100%', height: 'auto ' }}\n            />\n          </div>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'flex-end',\n              marginBottom: 14,\n            }}\n          >\n            <a href=\"/docs#click-no-drag-upload\">Properties</a>&nbsp; | &nbsp;\n            <a href=\"/demo\">Demo</a>\n          </div>\n          <pre>\n            <code className=\"language-javascript\">\n              {`import React, { Component } from 'react'\n\nimport { CSVReader } from 'react-papaparse'\n\nexport default class CSVReader extends Component {\n  handleOnDrop = (data) => {\n    console.log('---------------------------')\n    console.log(data)\n    console.log('---------------------------')\n  }\n\n  handleOnError = (err, file, inputElem, reason) => {\n    console.log(err)\n  }\n\n  handleOnRemoveFile = (data) => {\n    console.log('---------------------------')\n    console.log(data)\n    console.log('---------------------------')\n  }\n\n  render() {\n    return (\n      <CSVReader\n        onDrop={this.handleOnDrop}\n        onError={this.handleOnError}\n        noDrag\n        addRemoveButton\n        onRemoveFile={this.handleOnRemoveFile}\n      >\n        <span>Click to upload.</span>\n      </CSVReader>\n    )\n  }\n}`}\n            </code>\n          </pre>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default LocalFile;\n"]},"metadata":{},"sourceType":"module"}